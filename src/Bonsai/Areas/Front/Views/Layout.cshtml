@using Bonsai.Code.Services.Config
@inject BonsaiConfigService ConfigService
@{
    var appTitle = "RelationS";
    var rootUrl = "/";
    var isStarted = ViewBag.StartupMode != true;

    if (isStarted)
    {
        appTitle = ConfigService.GetDynamicConfig().Title;
        rootUrl = Url.Action("Index", "Home", new {area = "Front"});
    }

    var demoCfg = ConfigService.GetStaticConfig().DemoMode;
}

<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>@appTitle &mdash; @ViewBag.Title</title>
    <link href="@Url.Content("~/assets/styles/style.css")" rel="stylesheet" />
    <script src="https://cdn.jsdelivr.net/particles.js/2.0.0/particles.min.js"></script>
    @RenderSection("Head", false)
</head>
<body>

    <div id="particles-js" style="position:fixed; top:0; left:0; width:100%; height:100%; z-index:0;"></div>

    <div class="main-container d-flex flex-column">
        <header class="main-header border-bottom shadow-sm">
            <div class="container-fluid">
                <div class="row align-items-center">
                    <div class="col-auto">
                        <a class="logotype d-flex" href="@rootUrl">
                            <div class="logotype-image">
                                <img src="/assets/img/logo.svg">
                            </div>
                            <div class="logotype-text">@appTitle</div>
                        </a>
                    </div>
                    <div class="col search">
                        @if (ViewBag.DisableSearch == null)
                        {
                            <form method="get" action="@Url.Action("Search", "Search")">
                                <input type="text" name="query" id="search-query" placeholder="Search…" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" value="@ViewBag.SearchQuery" />
                            </form>
                        }
                    </div>
                    <div class="col-auto">
                        @if (isStarted)
                        {
                            @await Component.InvokeAsync("UserHeaderComponent")
                        }
                    </div>
                </div>
            </div>
        </header>
        @RenderBody()
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
        
        particlesJS('particles-js', {
            "particles": {
                "number": {
                    "value": 80,
                    "density": {
                        "enable": true,
                        "value_area": 800
                    }
                },
                "color": {
                    "value": "#0e4cb6"
                },
                "shape": {
                    "type": "circle",
                    "stroke": {
                        "width": 0,
                        "color": "#000000"
                    },
                    "polygon": {
                        "nb_sides": 5
                    }
                },
                "opacity": {
                    "value": 0.5,
                    "random": false,
                    "anim": {
                        "enable": false,
                        "speed": 1,
                        "opacity_min": 0.1,
                        "sync": false
                    }
                },
                "size": {
                    "value": 5,
                    "random": true,
                    "anim": {
                        "enable": false,
                        "speed": 40,
                        "size_min": 0.1,
                        "sync": false
                    }
                },
                "line_linked": {
                    "enable": true,
                    "distance": 150,
                    "color": "#0e4cb6",
                    "opacity": 0.4,
                    "width": 1
                },
                "move": {
                    "enable": true,
                    "speed": 6,
                    "direction": "none",
                    "random": false,
                    "straight": false,
                    "out_mode": "out",
                    "bounce": false,
                    "attract": {
                        "enable": false,
                        "rotateX": 600,
                        "rotateY": 1200
                    }
                }
            },
            "interactivity": {
                "detect_on": "canvas",
                "events": {
                    "onhover": {
                        "enable": true,
                        "mode": "repulse"
                    },
                    "onclick": {
                        "enable": true,
                        "mode": "push"
                    },
                    "resize": true
                },
                "modes": {
                    "grab": {
                        "distance": 140,
                        "line_linked": {
                            "opacity": 1
                        }
                    },
                    "bubble": {
                        "distance": 400,
                        "size": 40,
                        "duration": 2,
                        "opacity": 8,
                        "speed": 3
                    },
                    "repulse": {
                        "distance": 200,
                        "duration": 0.4
                    },
                    "push": {
                        "particles_nb": 4
                    },
                    "remove": {
                        "particles_nb": 2
                    }
                }
            },
            "retina_detect": true
        });
        });
    </script>

    <script src="@Url.Content("~/assets/scripts/vendor-common.js")"></script>
    <script src="@Url.Content("~/assets/scripts/common.js")"></script>
    <script src="@Url.Content("~/assets/scripts/front.js")"></script>
    @RenderSection("Scripts", false)

    @if (demoCfg.Enabled && !string.IsNullOrEmpty(demoCfg.YandexMetrikaId))
    {
        <script type="text/javascript">
            (function (m, e, t, r, i, k, a) {
                    m[i] = m[i] || function () { (m[i].a = m[i].a || []).push(arguments) };
                    m[i].l = 1 * new Date(); k = e.createElement(t), a = e.getElementsByTagName(t)[0], k.async = 1, k.src = r, a.parentNode.insertBefore(k, a)
                })
                (window, document, "script", "https://mc.yandex.ru/metrika/tag.js", "ym");

            ym(@(demoCfg.YandexMetrikaId), "init", {
                clickmap: true,
                trackLinks: true,
                accurateTrackBounce: true
            });
        </script>
        <noscript><div><img src="https://mc.yandex.ru/watch/@(demoCfg.YandexMetrikaId)" style="position:absolute; left:-9999px;" alt="" /></div></noscript>
    }
</body>
</html>